{"version":3,"sources":["component/Section/Section.module.css","component/Filter/Filter.module.css","component/ContactForm/Form.module.css","component/ContactForm/ContactForm.js","component/ContactList/ContactList.js","component/Filter/Filter.js","component/Section/Section.js","App.js","index.js","component/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameId","shortid","generate","numberId","handleChange","e","currentTarget","value","className","styles","form","preventDefault","htmlFor","flexRow","lfInput","type","placeholder","pattern","title","required","onChange","id","label","lfSubmit","ContactList","contacts","onDeleteContact","list","map","contactList","contactsNameNumber","buttonDelete","onClick","Filter","Section","children","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","find","alert","prevContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.800a57c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Section_form__UvcmF\",\"name\":\"Section_name__Ea6BF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lfInput\":\"Filter_lfInput__651ye\",\"lf--input\":\"Filter_lf--input__3Q0Eg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"Form_flexRow__1MZcD\",\"lfInput\":\"Form_lfInput__PDQbW\",\"lf--input\":\"Form_lf--input__3fNu-\",\"lfSubmit\":\"Form_lfSubmit__kMSLT\"};","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './Form.module.css';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameId = shortid.generate();\r\n  const numberId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>\r\n          <div className={styles.flexRow}>\r\n            <input\r\n              className={styles.lfInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={handleChange}\r\n              id={nameId}\r\n            />\r\n          </div>\r\n        </label>\r\n        <label className={styles.label} htmlFor={numberId}>\r\n          <div className={styles.flexRow}>\r\n            <input\r\n              className={styles.lfInput}\r\n              placeholder=\"Number\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleChange}\r\n              id={numberId}\r\n            />\r\n          </div>\r\n        </label>\r\n        <button className={styles.lfSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li className={styles.contactList} key={id}>\r\n          <span className={styles.contactsNameNumber}>\r\n            {name}: {number}\r\n          </span>\r\n          <button\r\n            className={styles.buttonDelete}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        className={styles.lfInput}\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.form}>\r\n      <h1 className={styles.name}>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Section;\r\n","import { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\nimport ContactForm from './component/ContactForm';\r\nimport ContactList from './component/ContactList';\r\nimport Filter from './component/Filter';\r\nimport Section from './component/Section';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(localStorage.getItem('contacts')) ?? [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    setContacts(prevContacts => [contact, ...prevContacts]);\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n  const deleteContact = contactId => {\r\n    setContacts(prevContacts =>\r\n      prevContacts.filter(contact => contact.id !== contactId),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <>\r\n      <Section title={'Phonebook'}>\r\n        <ContactForm onSubmit={addContact} />\r\n      </Section>\r\n      <Section title={'Contacts'}>\r\n        <Filter value={filter} onChange={changeFilter} />\r\n        <ContactList\r\n          contacts={getVisibleContacts()}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1JMNP\",\"contactList\":\"ContactList_contactList__3i1R_\",\"contactsNameNumber\":\"ContactList_contactsNameNumber__1KXAO\",\"buttonDelete\":\"ContactList_buttonDelete__g7ERl\"};"],"sourceRoot":""}